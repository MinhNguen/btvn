#include <iostream>
using namespace std;

class Box {
private:
    int length;
    int breadth;
    int height;

public:
    Box() : length(0), breadth(0), height(0) {}

    Box(int l, int b, int h) : length(l), breadth(b), height(h) {}

    Box(const Box &B) : length(B.length), breadth(B.breadth), height(B.height) {}

    int getLength() const {
        return length;
    }

    int getBreadth() const {
        return breadth;
    }

    int getHeight() const {
        return height;
    }

    long long CalculateVolume() const {
        return static_cast<long long>(length) * breadth * height;
    }

    bool operator<(const Box &B) const {
        if (length < B.length)
            return true;
        if (length == B.length && breadth < B.breadth)
            return true;
        if (length == B.length && breadth == B.breadth && height < B.height)
            return true;
        return false;
    }

    bool operator==(const Box &B) const {
        return (length == B.length && breadth == B.breadth && height == B.height);
    }

    friend ostream &operator<<(ostream &out, const Box &B) {
        out << B.length << " " << B.breadth << " " << B.height;
        return out;
    }
};

int main() {
    Box b1; 
    Box b2(3, 4, 5); 
    cout << b2 << endl;     
    cout << b2.CalculateVolume() << endl; 

    b1 = b2; 
    cout << b1 << endl;    
    cout << b1.CalculateVolume() << endl; 

    Box b3(4, 6, 7); 
    cout << b3 << endl; 
    return 0;
}
